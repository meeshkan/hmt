version: 2 # use CircleCI 2.0
jobs: # A basic unit of work in a run
  build: # runs not using Workflows must have a `build` job as entry point
    # directory where steps are run
    working_directory: ~/meeshkan
    docker: # run the steps with Docker
      # CircleCI Python images available at: https://hub.docker.com/r/circleci/python/
      - image: circleci/python:3.7.4-node
        environment: # environment variables for primary container
          PIPENV_VENV_IN_PROJECT: "true"
    steps: # steps that comprise the `build` job
      - checkout # check out source code to working directory
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.6/site-packages
      - restore_cache:
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }-1
      - run:
          command: |
            sudo pip install --upgrade pipenv
            pipenv install -e .[dev]
            pipenv update
      - save_cache: # cache Python dependencies using checksum of Pipfile as the cache-key
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}-1
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.6/site-packages"
      - run:
          command: |
            export VENV_HOME_DIR=$(pipenv --venv)
            source $VENV_HOME_DIR/bin/activate
            pytest -s
      - run:
          name: Install pyright and run typecheck
          command: |
            set +e
            echo 'export PATH=$(yarn global bin):$PATH' >> $BASH_ENV
            source $BASH_ENV
            yarn global add pyright
            export VENV_HOME_DIR=$(pipenv --venv)
            source $VENV_HOME_DIR/bin/activate
            pyright --lib
